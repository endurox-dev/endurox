#
# @(#) EnduroX Persistent Queue Configuration
# Not defaults used by testing QMEBADQUEUE
#
TEST1,svcnm=-,autoq=n,waitinit=0,waitretry=0,waitretrymax=0,memonly=n

#
# Have a test for errorq
#
FAILSVC,svcnm=@,waitinit=0,waitretry=0,waitretrymax=0,memonly=n,errorq=ERRORREQ,autoq=y

#
# Error requests goes here
#
ERRORREQ,svcnm=@,autoq=n,waitinit=0,waitretry=0,waitretrymax=0,memonly=n

#
# Error replies goes here
#
ERRORRSP,svcnm=@,autoq=n,waitinit=0,waitretry=0,waitretrymax=0,memonly=n


#
# Crash loop, messages shall not leave the queue
#
ERROR,svcnm=@,autoq=y,waitinit=0,waitretry=0,waitretrymax=0,memonly=n,errorq=ERROR

#
# Test of forward recovery / msg rollback when tmsrv failed.
# also.... in this case tmsrv shall crash, not come back, forget the logs
# and then attempt wait for timeout and we should be able to get msgs again...
# thus we need special configuration here. Configure ndrxd to not to respawn the 
# tmsrv and tmsrv logs shall be removed after the crash / exit.
#
CRASHQ,svcnm=@,autoq=n,tries=1,waitinit=0,waitretry=0,waitretrymax=0,memonly=n,errorq=CRASHERR

# So when tmsrv is back-on-line, this Q shall be filled.
CRASHERR,svcnm=-,autoq=n,waitinit=0,waitretry=0,waitretrymax=0,memonly=n

#
# Ensure that we do not sleep if there are tasks to do in sertain queues
# 1,4 -> load with 1 msg
# 2,3 -> load with 200 msg
# after some 60, all autos shall be compled, no sleep of 1 sec in any point
#
PERF1,svcnm=OKSVC,autoq=y,waitinit=0,waitretry=0,waitretrymax=0,memonly=n
PERF2,svcnm=OKSVC,autoq=y,waitinit=0,waitretry=0,waitretrymax=0,memonly=n
PERF3,svcnm=OKSVC,autoq=y,waitinit=0,waitretry=0,waitretrymax=0,memonly=n
PERF4,svcnm=OKSVC,autoq=y,waitinit=0,waitretry=0,waitretrymax=0,memonly=n

#
# QoS testing, slow queue shall not slow down all the other queue processing...
#
QOS000,svcnm=@,autoq=y,tries=3,waitinit=1,waitretry=1,waitretrymax=5,memonly=n,mode=fifo
QOS001,svcnm=@,autoq=y,tries=3,waitinit=1,waitretry=1,waitretrymax=5,memonly=n,mode=fifo
QOS002,svcnm=@,autoq=y,tries=3,waitinit=1,waitretry=1,waitretrymax=5,memonly=n,mode=fifo
QOS003,svcnm=@,autoq=y,tries=3,waitinit=1,waitretry=1,waitretrymax=5,memonly=n,mode=fifo
QOS004,svcnm=@,autoq=y,tries=3,waitinit=1,waitretry=1,waitretrymax=5,memonly=n,mode=fifo

#
# Queues used for Bug #725 testing (massive concurrent global transaction joins)
#
EXB000,autoq=n,tries=3,waitinit=1,waitretry=1,waitretrymax=5,memonly=n,mode=fifo
EXB001,autoq=n,tries=3,waitinit=1,waitretry=1,waitretrymax=5,memonly=n,mode=fifo
EXB002,autoq=n,tries=3,waitinit=1,waitretry=1,waitretrymax=5,memonly=n,mode=fifo
EXB003,autoq=n,tries=3,waitinit=1,waitretry=1,waitretrymax=5,memonly=n,mode=fifo
EXB004,autoq=n,tries=3,waitinit=1,waitretry=1,waitretrymax=5,memonly=n,mode=fifo
