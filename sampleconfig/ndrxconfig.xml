<?xml version="1.0" ?>
<endurox>
	<appconfig>
		<!-- ALL BELLOW ONES USES <sanity> periodical timer  -->
		<!-- Sanity check time, sec -->
		<sanity>1</sanity>
		<!--
		Seconds in which we should send service refresh to other node.
		-->
		<brrefresh>6</brrefresh>
		
		<!--  <sanity> timer, end -->
		
		<!-- Do process reset after 1 sec -->
		<restart_min>1</restart_min>
		<!-- If restart fails, then boot after +5 sec of previous wait time -->
		<restart_step>1</restart_step>
		<!-- If still not started, then max boot time is a 30 sec. -->
		<restart_max>5</restart_max>
		<!--  <sanity> timer, end -->
		
		<!-- Time after attach when program will start do sanity & respawn checks,
		starts counting after configuration load -->
		<restart_to_check>20</restart_to_check>
		
		<!-- Setting for pq command, should ndrxd collect service 
		queue stats automatically
		If set to Y or y, then queue stats are on.
		Default is off.
		-->
		<gather_pq_stats>Y</gather_pq_stats>
		
		<ddrreload>1</ddrreload>
		
	</appconfig>
	<procgroups>
	        <procgroup noorder="Y" grpno="1" name="GRP1" singleton="N" />
	        <procgroup noorder="Y" grpno="2" name="THIS_IS_MEGA_GROUP" singleton="N" />
	</procgroups>
	<defaults>
		<min>1</min>
		<max>2</max>
		<!-- Kill the process which have not started in <start_max> time -->
		<autokill>1</autokill>
		<!--
		<respawn>1<respawn>
		-->
		<!--
			<env></env> works here too!
		-->
		<!-- The maximum time while process can hang in 'starting' state i.e.
		have not completed initialization, sec
		X <= 0 = disabled 
		-->
		<start_max>2</start_max>
		<!--
		Ping server in every X seconds (step is <sanity>).
		-->
		<pingtime>10</pingtime>
		<!--
		Max time in seconds in which server must respond.
		The granularity is sanity time.
		X <= 0 = disabled 
		-->
		<ping_max>60</ping_max>
		<!--
		Max time to wait until process should exit on shutdown
		X <= 0 = disabled 
		-->
		<end_max>30</end_max>
		<!-- Interval, in seconds, by which signal sequence -2, -15, -9, -9.... will be sent
		to process until it have been terminated. -->
		<killtime>1</killtime>
		<!-- List of services (comma separated) for ndrxd to export services over bridges -->
	<!--     <exportsvcs>FOREX</exportsvcs> -->
	</defaults>
	<servers>
		<server name="tprecover">
			<srvid>1</srvid>
			<min>1</min>
			<max>1</max>
			<sysopt>-e /tmp/RECOVER -r</sysopt>
			<appopt>-c10</appopt>
<procgrp>GRP1</procgrp>
		</server>
		<server name="tpevsrv">
			<srvid>300</srvid>
			<min>1</min>
			<max>1</max>
			<sysopt>-e /tmp/TPEVSRV -r -N -s@TPEVPOST </sysopt>
<procgrp>THIS_IS_MEGA_GROUP</procgrp>
		</server>
		<!-- Default RM1 -->
		<server name="tpadmsv">
			<srvid>310</srvid>
			<min>1</min>
			<max>1</max>
			<envs><env name="NDRX_RTGRP">GT</env></envs>
			<sysopt>-e /tmp/ADT -r -SEHLO</sysopt>
		</server>
		<server name="tpadmsv">
			<srvid>311</srvid>
			<min>1</min>
			<max>1</max>
			<envs><env name="NDRX_RTGRP">GY</env></envs>
			<sysopt>-e /tmp/ADY -r</sysopt>
		</server>
		<server name="atmi.sv1">
			<srvid>1400</srvid>
			<min>1</min>
			<max>1</max>
			<sysopt>-e /tmp/ATMISV1 -r</sysopt>

		</server>
		<server name="atmi.sv20_1">
			<srvid>1600</srvid>
			<min>1</min>
			<max>1</max>
<procgrp_lp>THIS_IS_MEGA_GROUP</procgrp_lp>
			<sysopt>-e /tmp/ATMISV20_1 -r</sysopt>
		</server>

		<server name="tmsrv">
			<max>1</max>
			<srvid>1650</srvid>
			<sysopt>-e /tmp/tmsrv-dom1.log -r -- -t1 -l/tmp</sysopt>
		</server>

		<server name="tmqueue">
			<max>1</max>
			<srvid>1660</srvid>
			<sysopt>-e /tmp/tmqueue-dom1.log -r -- -m MYSPACE -s1</sysopt>
		</server>

		<server name="cconfsrv">
			<srvid>1700</srvid>
			<min>1</min>
			<max>1</max>
			<sysopt>-e /tmp/CCONF</sysopt>
		</server>

		<!--
		
		To run some bencmark and plot results use: (with 5 threads)
		$ exbenchcl -n5 -P  -B "UBF" -t20 -b "{\"T_LONG_FLD\":5}" -f T_CARRAY_FLD -S1024
		
		-->
		<server name="exbenchsv">
			<srvid>1800</srvid>
			<min>15</min>
			<max>15</max>
			<sysopt>-e /tmp/EXBENCH</sysopt>
		</server>

		<server name="cpmsrv">
			<srvid>9999</srvid>
			<min>1</min>
			<max>1</max>
			<sysopt>-e /tmp/CPMSRV -r -- -i10 -k5</sysopt>
		</server>
	</servers>
	
	<!-- Client section -->
	<clients>
		<client cmdline="/opt/bin/my_binary -t ${NDRX_CLTTAG} -s ${NDRX_CLTSUBSECT}" procgrp="GRP1">
			<exec tag="BINARY1" subsect="1" autostart="Y" />
			<exec tag="BINARY2" subsect="2" autostart="Y" />
		</client>
		<client cmdline="firefox"> <exec tag="FF"/> </client>
		<client cmdline="/tmp/test.bin" env="/tmp/yopt.env"> <exec tag="TT" log="/tmp/test.out"/> </client>
                <client cmdline="mongod -dbpath /home/mvitolin/tmp/data/db" >
                        <exec tag="mongo" autostart="Y"/>
                </client>
	</clients>


<services>
	<service svcnm="SERVICE1" prio="50" routing="HELLO"	autotran="Y" trantime="600" />
	<service svcnm="SERVICE2" prio="50" routing="HELLO"	autotran="Y" trantime="600" />
	<service svcnm="SERVICE3" prio="50" routing="HELLO"	autotran="Y" trantime="600" />
	<service svcnm="SERVICE4" prio="50" 	autotran="Y" trantime="600" />
	<service svcnm=".TMIB"    prio="50" />
</services>

<routing>

	<route routing="HELLO">
		<field>T_LONG_FLD</field>
		<ranges>MIN-4:GRP1,100-2000:GRP4,1000-22100:GRP5,*:*</ranges>
		<buftype>UBF</buftype>
	</route>

	<route routing="HELLO2">
		<field>T_LONG_FLD</field>
		<ranges>MIN-4:GRP1,1011-2000:GRP4,1000-22100:GRP5,*:*</ranges>
		<buftype>UBF</buftype>
	</route>

	<route routing="MIB">
		<field>TA_CLASS</field>
		<ranges>'T_CLIENT'-'T_CLIENT':GY,'T_SERVER'-'T_SERVER':GT,T_QUEUE:*</ranges>
		<buftype>UBF</buftype>
	</route>

	<route routing="HELLO4">
		<field>T_STRING_FLD</field> 
		<ranges>AAAA - ZZZZ : GPR1</ranges> 
		<buftype>UBF</buftype>
	</route>
</routing> 

</endurox>

